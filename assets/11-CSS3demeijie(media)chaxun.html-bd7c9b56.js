import{_ as s,o as n,c as a,a as e}from"./app-72013311.js";const t={},p=e(`<h1 id="_11-css3-的媒介-media-查询" tabindex="-1"><a class="header-anchor" href="#_11-css3-的媒介-media-查询" aria-hidden="true">#</a> 11-CSS3 的媒介(<em>media</em>)查询</h1><h2 id="经典真题" tabindex="-1"><a class="header-anchor" href="#经典真题" aria-hidden="true">#</a> 经典真题</h2><ul><li>如何使用媒体查询实现视口宽度大于 <em>320px</em> 小于 <em>640px</em> 时 <em>div</em> 元素宽度变成 <em>30%</em></li></ul><h2 id="媒体查询" tabindex="-1"><a class="header-anchor" href="#媒体查询" aria-hidden="true">#</a> 媒体查询</h2><p>媒体查询英文全称 <em>Media Query</em>，顾名思义就是会查询用户所使用的媒体或者媒介。</p><p>在现在，网页的浏览终端是越来越多了。用户可以通过不同的终端来浏览网页，例如：<em>PC</em>，平板电脑，手机，电视等。尽管我们无法保证一个网站在不同屏幕尺寸和不同设备上看起来一模一样，但是至少要让我们的 Web 页面能适配用户的终端。</p><p>在 <em>CSS3</em> 中的 <em>Media Query</em> （媒体查询）模块就是用来让一个页面适应不同的终端的。</p><p><strong><em>Media Type</em> 设备类型</strong></p><p>首先我们来认识一下 <em>CSS</em> 中所支持的媒体类型。</p><p>在 <em>CSS2</em> 中常碰到的就是 <em>all</em>（全部）、<em>screen</em>（屏幕）和 <em>print</em>（页面打印或打印预览模式）。然而媒体的类型其实远不止这 <em>3</em> 种。</p><p>在 <em>W3C</em> 中共列出了 <em>10</em> 种媒体类型，如下表所示：</p><table><thead><tr><th>值</th><th>设备类型</th></tr></thead><tbody><tr><td>All</td><td>所有设备</td></tr><tr><td>Braille</td><td>盲人用点字法触觉回馈设备</td></tr><tr><td>Embossed</td><td>盲文打印机</td></tr><tr><td>Handheld</td><td>便携设备</td></tr><tr><td>Print</td><td>打印用纸或打印预览视图</td></tr><tr><td>Projection</td><td>各种投影设备</td></tr><tr><td>Screen</td><td>电脑显示器</td></tr><tr><td>Speech</td><td>语音或音频合成器</td></tr><tr><td>Tv</td><td>电视机类型设备</td></tr><tr><td>Tty</td><td>使用固定密度字母栅格的媒介，比如电传打字机和终端</td></tr></tbody></table><p>当然，虽然上面的表列出来了这么多，但是常用的也就是 <em>all</em>（全部）、<em>screen</em>（屏幕）和 <em>print</em>（页面打印或打印预览模式）这三种媒体类型。</p><p><strong>媒体类型引用方法</strong></p><p>引用媒体类型的方法有和很多，常见的媒体类型引用方法有：<em>link</em> 标签、<em>xml</em> 方式、<em>@import</em> 和 <em>CSS3</em> 新增的 <em>@media</em>。</p><ol><li><em>link</em> 方法</li></ol><p><em>link</em> 方法引入媒体类型其实就是在 <em>link</em> 标签引用样式的时候，通过 <em>link</em> 标签中的 <em>media</em> 属性来指定不同的媒体类型，如下：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index.css<span class="token punctuation">&quot;</span></span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>screen<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>print.css<span class="token punctuation">&quot;</span></span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>print<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li><em>xml</em> 方式</li></ol><p><em>xml</em> 方式和 <em>link</em> 方式比较相似，也是通过 <em>media</em> 属性来指定，如下：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;? xml-stylesheet rel=&quot;stylesheet&quot; media=&quot;screen&quot; href=&quot;style.css&quot; ?&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li><em>@import</em></li></ol><p><em>@import</em> 引入媒体类型主要有两种方式，一种是在 CSS 样式表中通过 <em>@import</em> 调用另一个样式文件，另外一种是在 <em>style</em> 标签中引入。</p><blockquote><p>注意：<em>IE6</em> 和 <em>IE7</em> 中不支持该方式</p></blockquote><p>在样式文件中引入媒体类型：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@import</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;./index.css&#39;</span><span class="token punctuation">)</span></span> screen<span class="token punctuation">;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在 <em>style</em> 标签中引入媒体类型：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
  <span class="token atrule"><span class="token rule">@import</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;./index.css&#39;</span><span class="token punctuation">)</span></span> screen<span class="token punctuation">;</span></span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li><em>@meida</em> 的方式</li></ol><p><em>@media</em> 是 <em>CSS3</em> 中新引进的一个特性，称为媒体查询。<em>@media</em> 引入媒体也有两种方式，如下：</p><p>在样式文件中引入媒体类型：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@media</span> screen</span> <span class="token punctuation">{</span>
  <span class="token comment">/* 具体样式 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <em>style</em> 标签中引入媒体类型：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
  <span class="token atrule"><span class="token rule">@media</span> screen</span> <span class="token punctuation">{</span>
    <span class="token comment">/* 具体样式 */</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>虽然上面介绍了 <em>4</em> 种引入方式，但是最常见的就是第 <em>1</em> 种和第 <em>4</em> 种。</p><p><strong>媒体查询具体语法</strong></p><p>接下来我们来看一下媒体查询的具体语法。</p><p>这里我们可以将 <em>Media Query</em> 看成一个公式：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>Media Type（判断条件）+ CSS（符合条件的样式规则）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这里举例如下：</p><p><em>link</em> 的方式</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>screen and (max-width:600px)<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>style.css<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em>@media</em> 的方式</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@meida</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span>600px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
  <span class="token comment">/* 具体样式 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的两个例子中都是使用 <em>width</em> 来进行的样式判断，但是实际上还有很多特性都可以被用来当作样式判断的条件。</p><p>具体如下表：</p><p><img src="https://xiejie-typora.oss-cn-chengdu.aliyuncs.com/2021-09-16-085040.png" alt="image-20210916165039143"></p><p>有了 <em>Media Query</em>，我们能在不同的条件下使用不同的样式，使页面在不同的终端设备下达到不同的渲染效果。</p><p>这里有一个具体的公式如下：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@media</span> 媒体类型 <span class="token keyword">and</span> <span class="token punctuation">(</span>媒体特性<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
  <span class="token comment">/* 具体样式 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>来看几个具体示例。</p><ol><li>最大宽度 <em>max-width</em></li></ol><p>该特性是指媒体类型小于或等于指定宽度时，样式生效，例如：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@media</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 480px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
  <span class="token comment">/* 具体样式 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当屏幕宽度小于或等于 <em>480px</em> 时，样式生效</p><ol start="2"><li>最小宽度 <em>min-width</em></li></ol><p>该特性和上面相反，及媒体类型大于或等于指定宽度时，样式生效，例如：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@media</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 480px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
  <span class="token comment">/* 具体样式 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当屏幕宽度大于或等于 <em>480px</em> 时，样式生效</p><ol start="3"><li>多个媒体特性混合使用</li></ol><p>当需要多个媒体特性时，使用 <em>and</em> 关键字将媒体特性结合在一起，例如：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@media</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 480px<span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 900px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
  <span class="token comment">/* 具体样式 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当屏幕大于等于 <em>480px</em> 并且小于等于 <em>900px</em> 时，样式生效。</p><ol start="4"><li>设备屏幕的输出宽度 <em>Device Width</em></li></ol><p>在智能设备上，例如 <em>iphone、ipad</em> 等，可以通过 <em>min-device-width</em> 和 <em>max-device-width</em> 来设置媒体特性，例如：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@media</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-device-height</span><span class="token punctuation">:</span> 480px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
  <span class="token comment">/* 具体样式 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在智能设备上，当屏幕小于等于 <em>480px</em> 时样式生效</p><ol start="5"><li><em>not</em> 关键字</li></ol><p><em>not</em> 关键词可以用来排除某种制定的媒体特性，示例如下：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@media</span> <span class="token keyword">not</span> print <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 900px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
  <span class="token comment">/* 具体样式 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>样式代码将被用于除了打印设备和屏幕宽度小于或等于 <em>900px</em> 的所有设备中。</p><ol start="6"><li>未指明 <em>Media Type</em></li></ol><p>如果在媒体查询中没有明确的指定 <em>Media Type</em>，那么其默认值为 <em>all</em></p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 900px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
  <span class="token comment">/* 具体样式 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的样式适用于屏幕尺寸小于或等于 <em>900px</em> 的所有设备。</p><p>更多关于媒体查询的内容可以参阅 <em>MDN</em>：<em>https://developer.mozilla.org/zh-CN/docs/Web/CSS/Media_Queries/Using_media_queries</em></p><h2 id="真题解答" tabindex="-1"><a class="header-anchor" href="#真题解答" aria-hidden="true">#</a> 真题解答</h2><ul><li>如何使用媒体查询实现视口宽度大于 <em>320px</em> 小于 <em>640px</em> 时 <em>div</em> 元素宽度变成 <em>30%</em></li></ul><blockquote><p>参考答案：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@media</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 320px<span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 640px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
  <span class="token selector">div</span> <span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 30%<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><p>-<em>EOF</em>-</p>`,80),l=[p];function c(i,o){return n(),a("div",null,l)}const d=s(t,[["render",c],["__file","11-CSS3demeijie(media)chaxun.html.vue"]]);export{d as default};
