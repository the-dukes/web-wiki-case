import{_ as n,o as s,c as a,a as e}from"./app-0e5daedb.js";const t={},i=e(`<h1 id="_04-页面可见性" tabindex="-1"><a class="header-anchor" href="#_04-页面可见性" aria-hidden="true">#</a> 04-页面可见性</h1><h2 id="经典真题" tabindex="-1"><a class="header-anchor" href="#经典真题" aria-hidden="true">#</a> 经典真题</h2><ul><li>页面可见性（<em>Page Visibility</em>）<em>API</em> 可以有哪些用途？</li></ul><h2 id="页面可见性介绍" tabindex="-1"><a class="header-anchor" href="#页面可见性介绍" aria-hidden="true">#</a> 页面可见性介绍</h2><p>长期以来我们一直缺少一个判断用户是否正在浏览某个指定标签页的方法。</p><p>用户是否去看别的网站了？他们切换回来了么？</p><p>现在，<em>HTML5</em> 里页面可见性接口就提供给了程序员一个方法，让他们使用 <em>visibilitychange</em> 页面事件来判断当前页面可见性的状态，并针对性的执行某些任务。同时还有新的 <em>document.hidden</em> 属性可以使用。</p><p>常用的 <em>API</em> 如下：</p><ul><li><em><strong>document.hidden</strong></em>：这个新出现的 <em>document.hidden</em> 属性，它显示页面是否为用户当前观看的页面，值为 <em>ture</em> 或 <em>false</em>。</li><li><em><strong>document.visibilityState</strong></em>：<em>visibilityState</em> 的值要么是 <em>visible</em> ，表明页面为浏览器当前激活 <em>tab</em>，而且窗口不是最小化状态；要么是 <em>hidden</em> ，表示页面不是当前激活 <em>tab</em> 页面，或者窗口最小化了；或者 <em>prerender</em> ，表示页面在重新生成，对用户不可见。</li><li><em><strong>visibilitychange</strong></em> 事件：监听页面可见性变化事件</li></ul><p>下面是一个页面可见性的具体示例：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>页面可见性示例<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;visibilitychange&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>visibilityState <span class="token operator">===</span> <span class="token string">&#39;hidden&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">&#39;小样去哪儿了？快回来&#39;</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>visibilityState <span class="token operator">===</span> <span class="token string">&#39;visible&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">&#39;页面可见性示例&#39;</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>更多有关页面可见性的内容可以参阅 <em>MDN</em>：<em>https://developer.mozilla.org/zh-CN/docs/Web/API/Page_Visibility_API</em></p></blockquote><h2 id="真题解答" tabindex="-1"><a class="header-anchor" href="#真题解答" aria-hidden="true">#</a> 真题解答</h2><ul><li>页面可见性（<em>Page Visibility</em>）<em>API</em> 可以有哪些用途？</li></ul><blockquote><p>所谓页面可见性，就是获取当前页面的可见状态。因为对于用户来讲可以打开好多标签页面来回切换，然而始终只有一个页面处于显示状态。所以我们可以通过页面可见性（<em>Page Visibility</em>）<em>API</em> 来判断当前页面是显示状态还是隐藏状态。</p><p>常用的 <em>API</em> 有三个，<em>document.hidden</em> 返回一个布尔值，如果是 <em>true</em>，表示当前页面隐藏，<em>false</em> 则表示页面可见。不同页面之间来回切换，会触发 <em>visibilitychange</em> 事件，还有一个 <em>document.visibilityState</em>，表示页面所处的状态。</p><p>常见的用途：</p><ul><li>网站有图片轮播效果，只有在用户观看轮播的时候，才会自动展示下一张幻灯片。</li><li>显示信息仪表盘的应用程序不希望在页面不可见时轮询服务器进行更新。</li><li>页面想要检测是否正在渲染，以便可以准确的计算网页浏览量</li><li>当设备进入待机模式时，网站想要关闭设备声音（用户按下电源键关闭屏幕）</li></ul></blockquote>`,15),p=[i];function l(c,o){return s(),a("div",null,p)}const m=n(t,[["render",l],["__file","04-yemiankejianxing.html.vue"]]);export{m as default};
